<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.solace.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.solace.pojo.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="user_isUse" property="userIsuse" jdbcType="VARCHAR" />
    <result column="user_departID" property="userDepartid" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_duty" property="userDuty" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_birthday" property="userBirthday" jdbcType="TIMESTAMP" />
    <result column="user_backup" property="userBackup" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_name, user_desc, password, create_time, modify_time, user_isUse, 
    user_departID, user_sex, user_duty, user_phone, user_email, user_birthday, user_backup, 
    flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.solace.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from self_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from self_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from self_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.solace.pojo.UserExample" >
    delete from self_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.solace.pojo.User" >
    insert into self_user (id, user_id, user_name, 
      user_desc, password, create_time, 
      modify_time, user_isUse, user_departID, 
      user_sex, user_duty, user_phone, 
      user_email, user_birthday, user_backup, 
      flag)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userDesc,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{userIsuse,jdbcType=VARCHAR}, #{userDepartid,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userDuty,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{userBirthday,jdbcType=TIMESTAMP}, #{userBackup,jdbcType=VARCHAR}, 
      #{flag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.solace.pojo.User" >
    insert into self_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userDesc != null" >
        user_desc,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="userIsuse != null" >
        user_isUse,
      </if>
      <if test="userDepartid != null" >
        user_departID,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userDuty != null" >
        user_duty,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userBirthday != null" >
        user_birthday,
      </if>
      <if test="userBackup != null" >
        user_backup,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIsuse != null" >
        #{userIsuse,jdbcType=VARCHAR},
      </if>
      <if test="userDepartid != null" >
        #{userDepartid,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userDuty != null" >
        #{userDuty,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userBackup != null" >
        #{userBackup,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.solace.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from self_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update self_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userDesc != null" >
        user_desc = #{record.userDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userIsuse != null" >
        user_isUse = #{record.userIsuse,jdbcType=VARCHAR},
      </if>
      <if test="record.userDepartid != null" >
        user_departID = #{record.userDepartid,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null" >
        user_sex = #{record.userSex,jdbcType=VARCHAR},
      </if>
      <if test="record.userDuty != null" >
        user_duty = #{record.userDuty,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirthday != null" >
        user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userBackup != null" >
        user_backup = #{record.userBackup,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update self_user
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_desc = #{record.userDesc,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      user_isUse = #{record.userIsuse,jdbcType=VARCHAR},
      user_departID = #{record.userDepartid,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=VARCHAR},
      user_duty = #{record.userDuty,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_birthday = #{record.userBirthday,jdbcType=TIMESTAMP},
      user_backup = #{record.userBackup,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.solace.pojo.User" >
    update self_user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userIsuse != null" >
        user_isUse = #{userIsuse,jdbcType=VARCHAR},
      </if>
      <if test="userDepartid != null" >
        user_departID = #{userDepartid,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userDuty != null" >
        user_duty = #{userDuty,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null" >
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userBackup != null" >
        user_backup = #{userBackup,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solace.pojo.User" >
    update self_user
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      user_isUse = #{userIsuse,jdbcType=VARCHAR},
      user_departID = #{userDepartid,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_duty = #{userDuty,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      user_backup = #{userBackup,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>